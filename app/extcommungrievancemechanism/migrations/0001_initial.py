# Generated by Django 4.2.19 on 2025-02-23 14:39

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClaimComplainControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50, unique=True)),
                ('claim_complain_submitted_by', models.CharField(max_length=100)),
                ('claim_complain_reception_date', models.DateField()),
                ('claim_complain_description', models.TextField()),
                ('treatment_action', models.TextField()),
                ('claim_complain_responsible_person', models.CharField(max_length=100)),
                ('claim_complain_deadline', models.DateField()),
                ('claim_complain_status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed')], default='PENDING', max_length=50)),
                ('closure_date', models.DateField()),
                ('observation', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Claim And Complain Control',
                'verbose_name_plural': 'Claim And Complain Controls',
                'db_table': 'claim_complain_control',
            },
        ),
        migrations.CreateModel(
            name='ClaimNonComplianceControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50, unique=True)),
                ('non_compliance_description', models.TextField()),
                ('identified_causes', models.TextField()),
                ('corrective_actions', models.TextField()),
                ('responsible_person', models.CharField(max_length=100)),
                ('deadline', models.DateField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed')], default='PENDING', max_length=50)),
                ('effectiveness_evaluation', models.CharField(choices=[('EFFECTIVE', 'Effective'), ('NOT_EFFECTIVE', 'Not Effective')], default='NOT_EFFECTIVE', max_length=50)),
                ('responsible_person_evaluation', models.CharField(max_length=100)),
                ('observation', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Non Compliance Control',
                'verbose_name_plural': 'Non Compliance Controls',
                'db_table': 'claim_non_compliance_control',
            },
        ),
        migrations.CreateModel(
            name='ComplaintAndClaimRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50, unique=True)),
                ('date_occurred', models.DateField()),
                ('local_occurrence', models.CharField(max_length=100)),
                ('how_occurred', models.TextField()),
                ('who_involved', models.TextField()),
                ('report_and_explanation', models.TextField()),
                ('registered_date', models.DateTimeField(auto_now_add=True)),
                ('claim_local_occurrence', models.CharField(max_length=100)),
                ('complaintant_gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female')], max_length=50)),
                ('complaintant_age', models.IntegerField()),
                ('anonymous_complaint', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No')], max_length=50)),
                ('telephone', models.CharField(max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('complaintant_address', models.CharField(max_length=100)),
                ('complaintant_accepted', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No')], max_length=50)),
                ('action_taken', models.TextField()),
                ('complaintant_notified', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No')], default='NO', max_length=50)),
                ('notification_method', models.CharField(max_length=100)),
                ('closing_date', models.DateField()),
                ('claim_category', models.CharField(choices=[('Odor', 'Odor'), ('Noise', 'Noise'), ('Effluents', 'Effluents'), ('Company vehicles', 'Company vehicles'), ('Flow of migrant workers', 'Flow of migrant workers'), ('Security personnel', 'Security personnel'), ('GBV/SA/SEA', 'Gbv'), ('Other', 'Other')], max_length=50)),
                ('other_claim_category', models.CharField(max_length=100)),
                ('inspection_date', models.DateField()),
                ('collected_information', models.CharField(choices=[('Photos', 'Photos'), ('Proof of legitimacy documents', 'Proof of legitimacy documents')], max_length=50)),
                ('resolution_type', models.CharField(choices=[('Internal resolution', 'Internal resolution'), ('Second level resolution', 'Second level resolution'), ('Third level resolution', 'Third level resolution')], max_length=50)),
                ('resolution_date', models.DateField()),
                ('resolution_submitted', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No')], max_length=100)),
                ('corrective_action_taken', models.TextField()),
                ('involved_in_resolution', models.TextField()),
                ('complaintant_satisfaction', models.CharField(choices=[('SATISFIED', 'Satisfied'), ('NOT_SATISFIED', 'Not Satisfied')], max_length=50)),
                ('resources_spent', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('number_of_days_since_received_to_closure', models.IntegerField()),
                ('monitoring_after_closure', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No')], max_length=100)),
                ('monitoring_method_and_frequency', models.TextField()),
                ('follow_up', models.TextField()),
                ('involved_institutions', models.CharField(blank=True, max_length=100, null=True)),
                ('suggested_preventive_actions', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Complaints and Claims Registration Form FR.AS.026',
                'verbose_name_plural': 'Complaints and Claims Registration Form FR.AS.026',
                'db_table': 'complaint_and_claim_record',
            },
        ),
        migrations.CreateModel(
            name='PhotoDocumentProvingClosure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='complaints_and_claims_photos')),
                ('document', models.FileField(upload_to='complaints_and_claims_documents')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Photo and Document Proving Closure',
                'verbose_name_plural': 'Photos and Documents Proving Closure',
                'db_table': 'photo_document_proving_closure',
            },
        ),
        migrations.CreateModel(
            name='WorkerGrievance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('company', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('prefered_contact_method', models.CharField(choices=[('EMAIL', 'Email'), ('PHONE', 'Phone'), ('FACE_TO_FACE', 'Face to Face')], max_length=50)),
                ('contact', models.CharField(max_length=100)),
                ('prefered_language', models.CharField(choices=[('PORTUGUESE', 'Portuguese'), ('ENGLISH', 'English'), ('OTHER', 'Other')], max_length=50)),
                ('other_language', models.CharField(blank=True, max_length=100, null=True)),
                ('grievance_details', models.TextField()),
                ('unique_identification_of_company_acknowlegement', models.CharField(max_length=100)),
                ('name_of_person_acknowledging_grievance', models.CharField(max_length=100)),
                ('position_of_person_acknowledging_grievance', models.CharField(max_length=100)),
                ('date_of_acknowledgement', models.DateField()),
                ('signature_of_person_acknowledging_grievance', models.CharField(max_length=100)),
                ('follow_up_details', models.TextField()),
                ('closed_out_date', models.DateField()),
                ('signature_of_response_corrective_action_person', models.CharField(max_length=100)),
                ('acknowledge_receipt_of_response', models.CharField(max_length=100)),
                ('name_of_person_acknowledging_response', models.CharField(max_length=100)),
                ('signature_of_person_acknowledging_response', models.CharField(max_length=100)),
                ('date_of_acknowledgement_response', models.DateField()),
            ],
            options={
                'verbose_name': 'Worker Grievance (FR.AS.033)',
                'verbose_name_plural': 'Worker Grievances (FR.AS.033)',
            },
        ),
    ]
